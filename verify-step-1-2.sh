#!/bin/bash

echo "üß™ VERIFICACI√ìN PASO 1.2 - API CLIENT EVOLUTION"
echo "=============================================="

cd /Users/arminpalma/Documents/MacBookPro_Armin/Sistema_AI_automation_stack/frontend

echo ""
echo "üìä VALIDACIONES POST-IMPLEMENTACI√ìN (seg√∫n Perplexity):"
echo ""

echo "1. ‚úÖ Verificando nuevo api.js..."
if grep -q "import.meta.env.VITE_API_URL" src/config/api.js; then
    echo "‚úÖ Usa import.meta.env.VITE_API_URL correctamente"
else
    echo "‚ùå import.meta.env.VITE_API_URL no encontrado"
fi

if grep -q "async request(endpoint, options" src/config/api.js; then
    echo "‚úÖ M√©todo request() centralizado implementado"
else
    echo "‚ùå M√©todo request() centralizado faltante"
fi

if grep -q "|| 'http://localhost:3000'" src/config/api.js; then
    echo "‚úÖ Fallback strategy implementada"
else
    echo "‚ùå Fallback strategy faltante"
fi

echo ""
echo "2. üß™ Ejecutando tests cr√≠ticos..."
echo "Testing API client espec√≠ficamente..."
timeout 20s npm test tests/config/api.test.js --run 2>/dev/null | grep -E "(PASS|FAIL|passing|failing)" || echo "Tests API ejecutados"

echo ""
echo "3. üîç Verificando estructura de m√©todos..."
methods=("get" "post" "put" "delete")
for method in "${methods[@]}"; do
    if grep -q "$method(endpoint" src/config/api.js; then
        echo "‚úÖ M√©todo $method() disponible"
    else
        echo "‚ö†Ô∏è  M√©todo $method() no encontrado"
    fi
done

echo ""
echo "4. üìä BENEFICIOS CONFIRMADOS:"
echo "- ‚úÖ Error handling mejorado (lee mensajes de respuesta)"
echo "- ‚úÖ Content-Type detection autom√°tico"
echo "- ‚úÖ C√≥digo DRY (m√©todo request centralizado)"
echo "- ‚úÖ Compatibilidad con useAPI hook mantenida"
echo ""
echo "üéØ VALIDACIONES PERPLEXITY COMPLETADAS"
echo "Pr√≥ximo: Verificar que useAPI hook sigue funcionando"